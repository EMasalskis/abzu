version: 2
aliases:
  - &install-dependencies
    name: Install Node Dependencies
    command: npm install
  - &test
    name: Test
    command: npm run test
  - &build
    name: Build
    command: npm run build
  - &GCP-auth
    name: Authenticate with GCP SA credentials
    command: |
      echo $GCLOUD_SERVICE_KEY > ${HOME}/account-auth.json
      ./google-cloud-sdk/bin/gcloud auth activate-service-account --key-file ${HOME}/account-auth.json
  - &install-gcloud
    name: Install gcloud
    command: |
      set -x
      VER="218.0.0-linux-x86_64"
      wget https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-${VER}.tar.gz
      tar -xvzf google-cloud-sdk-${VER}.tar.gz
      ./google-cloud-sdk/install.sh -q
      ./google-cloud-sdk/bin/gcloud components update
  - &docker-login
    name: Docker login
    command: |
      cat ${HOME}/account-auth.json | docker login -u _json_key --password-stdin https://eu.gcr.io
  - &docker-build-and-push
    name: Build and PUSH Docker Image
    command: |
      CLOUDSDK_CORE_PROJECT="carbon-1287"
      IMAGE="eu.gcr.io/${CLOUDSDK_CORE_PROJECT}/${CIRCLE_PROJECT_REPONAME}"
      docker build -t $IMAGE .
      docker tag ${IMAGE} ${IMAGE}:$CIRCLE_SHA1
      cat ${HOME}/account-auth.json | docker login -u _json_key --password-stdin https://eu.gcr.io
      docker push $IMAGE
  - &save-dependency-cache
    paths:
      - node_modules
    key: node-modules-{{ arch }}-{{ .Branch }}-{{ checksum "package.json" }}
  - &restore-dependency-cache
    name: Restore dependency cache
    keys:
      - node-modules-{{ arch }}-{{ .Branch }}-{{ checksum "package.json" }}
  - &post-hook
    name: Notify about build and docker image pushed
    command: |
      echo "{\"name\": \"${CIRCLE_PROJECT_REPONAME}\", \"build\": {\"status\": \"SUCCESS\", \"phase\": \"FINALIZED\", \"scm\": {\"commit\": \"${CIRCLE_SHA1}\"}}}" > message.json
      echo sending: $(cat message.json)
      curl -X POST --data @message.json -H "apiKey: ${BUILD_STATUS_API_KEY}" -H "Content-Type: application/json" -H "ET-Client-Name: CircleCI" -H "ET-Client-ID: CircleCI-${CIRCLE_PROJECT_REPONAME}"  "${BUILD_STATUS_URL}"
jobs:
  install:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - run: *install-dependencies
      - save-cache: *save-dependency-cache
  test:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - restore-cache: *restore-dependency-cache
      - run: *test
  build:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - restore-cache: *restore-dependency-cache
      - run: *build
      - run: *install-gcloud
      - run: *GCP-auth
      - setup_remote_docker:
          docker_layer_caching: true
      - run: *docker-login
      - run: *docker-build-and-push
      - run: *post-hook
workflows:
  version: 2
  install-test-build-deploy:
    jobs:
      - install:
          context: org-carbon
      - test:
          context: org-carbon
          requires:
            - install
      - build:
          context: org-carbon
          requires:
            - test
          filters:
            branches:
              only:
              - master
